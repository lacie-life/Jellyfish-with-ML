visualizing the mesh using open3D
Loading the same file with PyTorch3D
Xudong comment, load obj is called
Type of vertices =  <class 'torch.Tensor'>
Type of faces =  <class 'pytorch3d.io.obj_io.Faces'>
Type of aux =  <class 'pytorch3d.io.obj_io.Properties'>
vertices =  tensor([[ 1.0000, -1.0000, -1.0000],
        [ 1.0000, -1.0000,  1.0000],
        [-1.0000, -1.0000,  1.0000],
        [-1.0000, -1.0000, -1.0000],
        [ 1.0000,  1.0000, -1.0000],
        [ 1.0000,  1.0000,  1.0000],
        [-1.0000,  1.0000,  1.0000],
        [-1.0000,  1.0000, -1.0000]])
faces =  Faces(verts_idx=tensor([[1, 2, 3],
        [7, 6, 5],
        [4, 5, 1],
        [5, 6, 2],
        [2, 6, 7],
        [0, 3, 7],
        [0, 1, 3],
        [4, 7, 5],
        [0, 4, 1],
        [1, 5, 2],
        [3, 2, 7],
        [4, 0, 7]]), normals_idx=tensor([[0, 0, 0],
        [1, 1, 1],
        [2, 2, 2],
        [3, 3, 3],
        [4, 4, 4],
        [5, 5, 5],
        [0, 0, 0],
        [1, 1, 1],
        [2, 2, 2],
        [3, 3, 3],
        [4, 4, 4],
        [5, 5, 5]]), textures_idx=tensor([[ 0,  1,  2],
        [ 0,  3,  4],
        [ 5,  6,  7],
        [ 7,  4,  3],
        [ 8,  9, 10],
        [11, 12, 10],
        [ 3,  0,  2],
        [13,  0,  4],
        [11,  5,  7],
        [11,  7,  3],
        [12,  8, 10],
        [ 5, 11, 10]]), materials_idx=tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
aux =  Properties(normals=tensor([[ 0., -1.,  0.],
        [ 0.,  1.,  0.],
        [ 1.,  0.,  0.],
        [-0.,  0.,  1.],
        [-1., -0., -0.],
        [ 0.,  0., -1.]]), verts_uvs=tensor([[1.0000, 0.3333],
        [1.0000, 0.6667],
        [0.6667, 0.6667],
        [0.6667, 0.3333],
        [0.6667, 0.0000],
        [0.0000, 0.3333],
        [0.0000, 0.0000],
        [0.3333, 0.0000],
        [0.3333, 1.0000],
        [0.0000, 1.0000],
        [0.0000, 0.6667],
        [0.3333, 0.3333],
        [0.3333, 0.6667],
        [1.0000, 0.0000]]), material_colors={'Skin': {'ambient_color': tensor([0.2000, 0.2000, 0.2000]), 'diffuse_color': tensor([0.8275, 0.7922, 0.7725]), 'specular_color': tensor([0., 0., 0.]), 'shininess': tensor([0.])}}, texture_images={'Skin': tensor([[[0.2078, 0.1765, 0.1020],
         [0.2039, 0.1725, 0.0980],
         [0.1961, 0.1647, 0.0902],
         ...,
         [0.2588, 0.2275, 0.1451],
         [0.2510, 0.2196, 0.1373],
         [0.2353, 0.2039, 0.1216]],

        [[0.1922, 0.1608, 0.0863],
         [0.1882, 0.1569, 0.0824],
         [0.1922, 0.1608, 0.0863],
         ...,
         [0.2706, 0.2392, 0.1569],
         [0.2510, 0.2196, 0.1373],
         [0.2353, 0.2039, 0.1216]],

        [[0.1843, 0.1529, 0.0784],
         [0.1843, 0.1529, 0.0784],
         [0.1882, 0.1569, 0.0824],
         ...,
         [0.2784, 0.2471, 0.1647],
         [0.2510, 0.2196, 0.1373],
         [0.2353, 0.2039, 0.1216]],

        ...,

        [[0.3176, 0.2745, 0.2039],
         [0.3098, 0.2667, 0.1961],
         [0.3020, 0.2588, 0.1882],
         ...,
         [0.1843, 0.1490, 0.0824],
         [0.2039, 0.1686, 0.1020],
         [0.2196, 0.1843, 0.1176]],

        [[0.2941, 0.2510, 0.1804],
         [0.2471, 0.2039, 0.1333],
         [0.2314, 0.1882, 0.1176],
         ...,
         [0.2431, 0.2078, 0.1490],
         [0.2235, 0.1882, 0.1294],
         [0.2235, 0.1882, 0.1294]],

        [[0.2784, 0.2353, 0.1647],
         [0.2353, 0.1922, 0.1216],
         [0.2157, 0.1725, 0.1020],
         ...,
         [0.2431, 0.2078, 0.1490],
         [0.2235, 0.1882, 0.1294],
         [0.2235, 0.1882, 0.1294]]])}, texture_atlas=None)
texture_images type =  <class 'dict'>
Skin
torch.Size([250, 250, 3])
